'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class dsReport
    Inherits DataSet
    
    Private tabletCust_Info As tCust_InfoDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tCust_Info")) Is Nothing) Then
                Me.Tables.Add(New tCust_InfoDataTable(ds.Tables("tCust_Info")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tCust_Info As tCust_InfoDataTable
        Get
            Return Me.tabletCust_Info
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As dsReport = CType(MyBase.Clone,dsReport)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("tCust_Info")) Is Nothing) Then
            Me.Tables.Add(New tCust_InfoDataTable(ds.Tables("tCust_Info")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tabletCust_Info = CType(Me.Tables("tCust_Info"),tCust_InfoDataTable)
        If (Not (Me.tabletCust_Info) Is Nothing) Then
            Me.tabletCust_Info.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "dsReport"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsReport.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tabletCust_Info = New tCust_InfoDataTable
        Me.Tables.Add(Me.tabletCust_Info)
    End Sub
    
    Private Function ShouldSerializetCust_Info() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub tCust_InfoRowChangeEventHandler(ByVal sender As Object, ByVal e As tCust_InfoRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tCust_InfoDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnnCust_Id As DataColumn
        
        Private columncCust_Name As DataColumn
        
        Private columncPhnNo As DataColumn
        
        Private columncPostCode As DataColumn
        
        Private columncAddress As DataColumn
        
        Private columncCompany As DataColumn
        
        Private columndCust_EntryDate As DataColumn
        
        Private columndLstOrdrDate As DataColumn
        
        Private columncCust_BillAdd As DataColumn
        
        Private columncEmail As DataColumn
        
        Private columncURL As DataColumn
        
        Private columncCust_Fax As DataColumn
        
        Private columncCust_Mobile As DataColumn
        
        Private columncComment As DataColumn
        
        Private columncDriverDirection As DataColumn
        
        Private columncReview As DataColumn
        
        Private columncCardHolder As DataColumn
        
        Private columncCardNo As DataColumn
        
        Private columnnIssueNo As DataColumn
        
        Private columndValidfrom As DataColumn
        
        Private columndExpiryDate As DataColumn
        
        Private columncUserId As DataColumn
        
        Private columncTermenal As DataColumn
        
        Private columndAccessTime As DataColumn
        
        Private columnnGuestsNumber As DataColumn
        
        Private columnnTable_Id As DataColumn
        
        Private columnnCtgry_Id As DataColumn
        
        Private columncCtgry_Name As DataColumn
        
        Private columncCtgry_SC As DataColumn
        
        Private columnnInstruction_Id As DataColumn
        
        Private columncInstruction As DataColumn
        
        Private columnnItem_Id As DataColumn
        
        Private columncItem_Name As DataColumn
        
        Private columncItem_SC As DataColumn
        
        Private columncItem_Desc As DataColumn
        
        Private columncItem_ServeLoc As DataColumn
        
        Private columnnItem_Stock As DataColumn
        
        Private columnmDinePrice As DataColumn
        
        Private columnmTakeawayPrice As DataColumn
        
        Private columnnOrder_Id As DataColumn
        
        Private columndOrder_date As DataColumn
        
        Private columnmTotalPrice As DataColumn
        
        Private columnmDiscount As DataColumn
        
        Private columnmService_Charge As DataColumn
        
        Private columnmNetpay As DataColumn
        
        Private columnnOrderStatus As DataColumn
        
        Private columnnItem_Qty As DataColumn
        
        Private columnnTable_Size As DataColumn
        
        Private columnnTable_Capacity As DataColumn
        
        Private columnnStatus As DataColumn
        
        Private columnnType_Id As DataColumn
        
        Private columncType_Name As DataColumn
        
        Private columncType_SC As DataColumn
        
        Private columnmUnitPrice As DataColumn
        
        Private columnnCardId As DataColumn
        
        Private columncCardType As DataColumn
        
        Private columncRestName As DataColumn
        
        Private columncRestType As DataColumn
        
        Private columncResAddress1 As DataColumn
        
        Private columncResAddress2 As DataColumn
        
        Private columncResAddress3 As DataColumn
        
        Private columncResPhoneNumber As DataColumn
        
        Private columncResFaxNumber As DataColumn
        
        Private columncResEmaiAddress As DataColumn
        
        Private columncResWebAddress As DataColumn
        
        Private columncGreetinMsg As DataColumn
        
        Private columnnVat As DataColumn
        
        Private columncVatNumber As DataColumn
        
        Private columnmCashPayAmount As DataColumn
        
        Private columnmCardPayAmount As DataColumn
        
        Private columnmChequeAmount As DataColumn
        
        Private columncChequeNumber As DataColumn
        
        Private columncBankName As DataColumn
        
        Private columnmTotalFoodSales As DataColumn
        
        Private columnmTotalDrinkSales As DataColumn
        
        Friend Sub New()
            MyBase.New("tCust_Info")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property nCust_IdColumn As DataColumn
            Get
                Return Me.columnnCust_Id
            End Get
        End Property
        
        Friend ReadOnly Property cCust_NameColumn As DataColumn
            Get
                Return Me.columncCust_Name
            End Get
        End Property
        
        Friend ReadOnly Property cPhnNoColumn As DataColumn
            Get
                Return Me.columncPhnNo
            End Get
        End Property
        
        Friend ReadOnly Property cPostCodeColumn As DataColumn
            Get
                Return Me.columncPostCode
            End Get
        End Property
        
        Friend ReadOnly Property cAddressColumn As DataColumn
            Get
                Return Me.columncAddress
            End Get
        End Property
        
        Friend ReadOnly Property cCompanyColumn As DataColumn
            Get
                Return Me.columncCompany
            End Get
        End Property
        
        Friend ReadOnly Property dCust_EntryDateColumn As DataColumn
            Get
                Return Me.columndCust_EntryDate
            End Get
        End Property
        
        Friend ReadOnly Property dLstOrdrDateColumn As DataColumn
            Get
                Return Me.columndLstOrdrDate
            End Get
        End Property
        
        Friend ReadOnly Property cCust_BillAddColumn As DataColumn
            Get
                Return Me.columncCust_BillAdd
            End Get
        End Property
        
        Friend ReadOnly Property cEmailColumn As DataColumn
            Get
                Return Me.columncEmail
            End Get
        End Property
        
        Friend ReadOnly Property cURLColumn As DataColumn
            Get
                Return Me.columncURL
            End Get
        End Property
        
        Friend ReadOnly Property cCust_FaxColumn As DataColumn
            Get
                Return Me.columncCust_Fax
            End Get
        End Property
        
        Friend ReadOnly Property cCust_MobileColumn As DataColumn
            Get
                Return Me.columncCust_Mobile
            End Get
        End Property
        
        Friend ReadOnly Property cCommentColumn As DataColumn
            Get
                Return Me.columncComment
            End Get
        End Property
        
        Friend ReadOnly Property cDriverDirectionColumn As DataColumn
            Get
                Return Me.columncDriverDirection
            End Get
        End Property
        
        Friend ReadOnly Property cReviewColumn As DataColumn
            Get
                Return Me.columncReview
            End Get
        End Property
        
        Friend ReadOnly Property cCardHolderColumn As DataColumn
            Get
                Return Me.columncCardHolder
            End Get
        End Property
        
        Friend ReadOnly Property cCardNoColumn As DataColumn
            Get
                Return Me.columncCardNo
            End Get
        End Property
        
        Friend ReadOnly Property nIssueNoColumn As DataColumn
            Get
                Return Me.columnnIssueNo
            End Get
        End Property
        
        Friend ReadOnly Property dValidfromColumn As DataColumn
            Get
                Return Me.columndValidfrom
            End Get
        End Property
        
        Friend ReadOnly Property dExpiryDateColumn As DataColumn
            Get
                Return Me.columndExpiryDate
            End Get
        End Property
        
        Friend ReadOnly Property cUserIdColumn As DataColumn
            Get
                Return Me.columncUserId
            End Get
        End Property
        
        Friend ReadOnly Property cTermenalColumn As DataColumn
            Get
                Return Me.columncTermenal
            End Get
        End Property
        
        Friend ReadOnly Property dAccessTimeColumn As DataColumn
            Get
                Return Me.columndAccessTime
            End Get
        End Property
        
        Friend ReadOnly Property nGuestsNumberColumn As DataColumn
            Get
                Return Me.columnnGuestsNumber
            End Get
        End Property
        
        Friend ReadOnly Property nTable_IdColumn As DataColumn
            Get
                Return Me.columnnTable_Id
            End Get
        End Property
        
        Friend ReadOnly Property nCtgry_IdColumn As DataColumn
            Get
                Return Me.columnnCtgry_Id
            End Get
        End Property
        
        Friend ReadOnly Property cCtgry_NameColumn As DataColumn
            Get
                Return Me.columncCtgry_Name
            End Get
        End Property
        
        Friend ReadOnly Property cCtgry_SCColumn As DataColumn
            Get
                Return Me.columncCtgry_SC
            End Get
        End Property
        
        Friend ReadOnly Property nInstruction_IdColumn As DataColumn
            Get
                Return Me.columnnInstruction_Id
            End Get
        End Property
        
        Friend ReadOnly Property cInstructionColumn As DataColumn
            Get
                Return Me.columncInstruction
            End Get
        End Property
        
        Friend ReadOnly Property nItem_IdColumn As DataColumn
            Get
                Return Me.columnnItem_Id
            End Get
        End Property
        
        Friend ReadOnly Property cItem_NameColumn As DataColumn
            Get
                Return Me.columncItem_Name
            End Get
        End Property
        
        Friend ReadOnly Property cItem_SCColumn As DataColumn
            Get
                Return Me.columncItem_SC
            End Get
        End Property
        
        Friend ReadOnly Property cItem_DescColumn As DataColumn
            Get
                Return Me.columncItem_Desc
            End Get
        End Property
        
        Friend ReadOnly Property cItem_ServeLocColumn As DataColumn
            Get
                Return Me.columncItem_ServeLoc
            End Get
        End Property
        
        Friend ReadOnly Property nItem_StockColumn As DataColumn
            Get
                Return Me.columnnItem_Stock
            End Get
        End Property
        
        Friend ReadOnly Property mDinePriceColumn As DataColumn
            Get
                Return Me.columnmDinePrice
            End Get
        End Property
        
        Friend ReadOnly Property mTakeawayPriceColumn As DataColumn
            Get
                Return Me.columnmTakeawayPrice
            End Get
        End Property
        
        Friend ReadOnly Property nOrder_IdColumn As DataColumn
            Get
                Return Me.columnnOrder_Id
            End Get
        End Property
        
        Friend ReadOnly Property dOrder_dateColumn As DataColumn
            Get
                Return Me.columndOrder_date
            End Get
        End Property
        
        Friend ReadOnly Property mTotalPriceColumn As DataColumn
            Get
                Return Me.columnmTotalPrice
            End Get
        End Property
        
        Friend ReadOnly Property mDiscountColumn As DataColumn
            Get
                Return Me.columnmDiscount
            End Get
        End Property
        
        Friend ReadOnly Property mService_ChargeColumn As DataColumn
            Get
                Return Me.columnmService_Charge
            End Get
        End Property
        
        Friend ReadOnly Property mNetpayColumn As DataColumn
            Get
                Return Me.columnmNetpay
            End Get
        End Property
        
        Friend ReadOnly Property nOrderStatusColumn As DataColumn
            Get
                Return Me.columnnOrderStatus
            End Get
        End Property
        
        Friend ReadOnly Property nItem_QtyColumn As DataColumn
            Get
                Return Me.columnnItem_Qty
            End Get
        End Property
        
        Friend ReadOnly Property nTable_SizeColumn As DataColumn
            Get
                Return Me.columnnTable_Size
            End Get
        End Property
        
        Friend ReadOnly Property nTable_CapacityColumn As DataColumn
            Get
                Return Me.columnnTable_Capacity
            End Get
        End Property
        
        Friend ReadOnly Property nStatusColumn As DataColumn
            Get
                Return Me.columnnStatus
            End Get
        End Property
        
        Friend ReadOnly Property nType_IdColumn As DataColumn
            Get
                Return Me.columnnType_Id
            End Get
        End Property
        
        Friend ReadOnly Property cType_NameColumn As DataColumn
            Get
                Return Me.columncType_Name
            End Get
        End Property
        
        Friend ReadOnly Property cType_SCColumn As DataColumn
            Get
                Return Me.columncType_SC
            End Get
        End Property
        
        Friend ReadOnly Property mUnitPriceColumn As DataColumn
            Get
                Return Me.columnmUnitPrice
            End Get
        End Property
        
        Friend ReadOnly Property nCardIdColumn As DataColumn
            Get
                Return Me.columnnCardId
            End Get
        End Property
        
        Friend ReadOnly Property cCardTypeColumn As DataColumn
            Get
                Return Me.columncCardType
            End Get
        End Property
        
        Friend ReadOnly Property cRestNameColumn As DataColumn
            Get
                Return Me.columncRestName
            End Get
        End Property
        
        Friend ReadOnly Property cRestTypeColumn As DataColumn
            Get
                Return Me.columncRestType
            End Get
        End Property
        
        Friend ReadOnly Property cResAddress1Column As DataColumn
            Get
                Return Me.columncResAddress1
            End Get
        End Property
        
        Friend ReadOnly Property cResAddress2Column As DataColumn
            Get
                Return Me.columncResAddress2
            End Get
        End Property
        
        Friend ReadOnly Property cResAddress3Column As DataColumn
            Get
                Return Me.columncResAddress3
            End Get
        End Property
        
        Friend ReadOnly Property cResPhoneNumberColumn As DataColumn
            Get
                Return Me.columncResPhoneNumber
            End Get
        End Property
        
        Friend ReadOnly Property cResFaxNumberColumn As DataColumn
            Get
                Return Me.columncResFaxNumber
            End Get
        End Property
        
        Friend ReadOnly Property cResEmaiAddressColumn As DataColumn
            Get
                Return Me.columncResEmaiAddress
            End Get
        End Property
        
        Friend ReadOnly Property cResWebAddressColumn As DataColumn
            Get
                Return Me.columncResWebAddress
            End Get
        End Property
        
        Friend ReadOnly Property cGreetinMsgColumn As DataColumn
            Get
                Return Me.columncGreetinMsg
            End Get
        End Property
        
        Friend ReadOnly Property nVatColumn As DataColumn
            Get
                Return Me.columnnVat
            End Get
        End Property
        
        Friend ReadOnly Property cVatNumberColumn As DataColumn
            Get
                Return Me.columncVatNumber
            End Get
        End Property
        
        Friend ReadOnly Property mCashPayAmountColumn As DataColumn
            Get
                Return Me.columnmCashPayAmount
            End Get
        End Property
        
        Friend ReadOnly Property mCardPayAmountColumn As DataColumn
            Get
                Return Me.columnmCardPayAmount
            End Get
        End Property
        
        Friend ReadOnly Property mChequeAmountColumn As DataColumn
            Get
                Return Me.columnmChequeAmount
            End Get
        End Property
        
        Friend ReadOnly Property cChequeNumberColumn As DataColumn
            Get
                Return Me.columncChequeNumber
            End Get
        End Property
        
        Friend ReadOnly Property cBankNameColumn As DataColumn
            Get
                Return Me.columncBankName
            End Get
        End Property
        
        Friend ReadOnly Property mTotalFoodSalesColumn As DataColumn
            Get
                Return Me.columnmTotalFoodSales
            End Get
        End Property
        
        Friend ReadOnly Property mTotalDrinkSalesColumn As DataColumn
            Get
                Return Me.columnmTotalDrinkSales
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tCust_InfoRow
            Get
                Return CType(Me.Rows(index),tCust_InfoRow)
            End Get
        End Property
        
        Public Event tCust_InfoRowChanged As tCust_InfoRowChangeEventHandler
        
        Public Event tCust_InfoRowChanging As tCust_InfoRowChangeEventHandler
        
        Public Event tCust_InfoRowDeleted As tCust_InfoRowChangeEventHandler
        
        Public Event tCust_InfoRowDeleting As tCust_InfoRowChangeEventHandler
        
        Public Overloads Sub AddtCust_InfoRow(ByVal row As tCust_InfoRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddtCust_InfoRow( _
                    ByVal nCust_Id As Integer,  _
                    ByVal cCust_Name As String,  _
                    ByVal cPhnNo As String,  _
                    ByVal cPostCode As String,  _
                    ByVal cAddress As String,  _
                    ByVal cCompany As String,  _
                    ByVal dCust_EntryDate As Date,  _
                    ByVal dLstOrdrDate As Date,  _
                    ByVal cCust_BillAdd As String,  _
                    ByVal cEmail As String,  _
                    ByVal cURL As String,  _
                    ByVal cCust_Fax As String,  _
                    ByVal cCust_Mobile As String,  _
                    ByVal cComment As String,  _
                    ByVal cDriverDirection As String,  _
                    ByVal cReview As String,  _
                    ByVal cCardHolder As String,  _
                    ByVal cCardNo As String,  _
                    ByVal nIssueNo As Integer,  _
                    ByVal dValidfrom As Date,  _
                    ByVal dExpiryDate As Date,  _
                    ByVal cUserId As String,  _
                    ByVal cTermenal As String,  _
                    ByVal dAccessTime As Date,  _
                    ByVal nGuestsNumber As Integer,  _
                    ByVal nTable_Id As Integer,  _
                    ByVal nCtgry_Id As Integer,  _
                    ByVal cCtgry_Name As String,  _
                    ByVal cCtgry_SC As String,  _
                    ByVal nInstruction_Id As Integer,  _
                    ByVal cInstruction As String,  _
                    ByVal nItem_Id As Integer,  _
                    ByVal cItem_Name As String,  _
                    ByVal cItem_SC As String,  _
                    ByVal cItem_Desc As String,  _
                    ByVal cItem_ServeLoc As String,  _
                    ByVal nItem_Stock As Integer,  _
                    ByVal mDinePrice As Decimal,  _
                    ByVal mTakeawayPrice As Decimal,  _
                    ByVal nOrder_Id As Integer,  _
                    ByVal dOrder_date As Date,  _
                    ByVal mTotalPrice As Decimal,  _
                    ByVal mDiscount As Decimal,  _
                    ByVal mService_Charge As Decimal,  _
                    ByVal mNetpay As Decimal,  _
                    ByVal nOrderStatus As Integer,  _
                    ByVal nItem_Qty As Integer,  _
                    ByVal nTable_Size As Integer,  _
                    ByVal nTable_Capacity As Integer,  _
                    ByVal nStatus As Integer,  _
                    ByVal nType_Id As Integer,  _
                    ByVal cType_Name As String,  _
                    ByVal cType_SC As String,  _
                    ByVal mUnitPrice As Decimal,  _
                    ByVal nCardId As Integer,  _
                    ByVal cCardType As String,  _
                    ByVal cRestName As String,  _
                    ByVal cRestType As String,  _
                    ByVal cResAddress1 As String,  _
                    ByVal cResAddress2 As String,  _
                    ByVal cResAddress3 As String,  _
                    ByVal cResPhoneNumber As String,  _
                    ByVal cResFaxNumber As String,  _
                    ByVal cResEmaiAddress As String,  _
                    ByVal cResWebAddress As String,  _
                    ByVal cGreetinMsg As String,  _
                    ByVal nVat As Decimal,  _
                    ByVal cVatNumber As String,  _
                    ByVal mCashPayAmount As Decimal,  _
                    ByVal mCardPayAmount As Decimal,  _
                    ByVal mChequeAmount As Decimal,  _
                    ByVal cChequeNumber As String,  _
                    ByVal cBankName As String,  _
                    ByVal mTotalFoodSales As Decimal,  _
                    ByVal mTotalDrinkSales As Decimal) As tCust_InfoRow
            Dim rowtCust_InfoRow As tCust_InfoRow = CType(Me.NewRow,tCust_InfoRow)
            rowtCust_InfoRow.ItemArray = New Object() {nCust_Id, cCust_Name, cPhnNo, cPostCode, cAddress, cCompany, dCust_EntryDate, dLstOrdrDate, cCust_BillAdd, cEmail, cURL, cCust_Fax, cCust_Mobile, cComment, cDriverDirection, cReview, cCardHolder, cCardNo, nIssueNo, dValidfrom, dExpiryDate, cUserId, cTermenal, dAccessTime, nGuestsNumber, nTable_Id, nCtgry_Id, cCtgry_Name, cCtgry_SC, nInstruction_Id, cInstruction, nItem_Id, cItem_Name, cItem_SC, cItem_Desc, cItem_ServeLoc, nItem_Stock, mDinePrice, mTakeawayPrice, nOrder_Id, dOrder_date, mTotalPrice, mDiscount, mService_Charge, mNetpay, nOrderStatus, nItem_Qty, nTable_Size, nTable_Capacity, nStatus, nType_Id, cType_Name, cType_SC, mUnitPrice, nCardId, cCardType, cRestName, cRestType, cResAddress1, cResAddress2, cResAddress3, cResPhoneNumber, cResFaxNumber, cResEmaiAddress, cResWebAddress, cGreetinMsg, nVat, cVatNumber, mCashPayAmount, mCardPayAmount, mChequeAmount, cChequeNumber, cBankName, mTotalFoodSales, mTotalDrinkSales}
            Me.Rows.Add(rowtCust_InfoRow)
            Return rowtCust_InfoRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tCust_InfoDataTable = CType(MyBase.Clone,tCust_InfoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tCust_InfoDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnnCust_Id = Me.Columns("nCust_Id")
            Me.columncCust_Name = Me.Columns("cCust_Name")
            Me.columncPhnNo = Me.Columns("cPhnNo")
            Me.columncPostCode = Me.Columns("cPostCode")
            Me.columncAddress = Me.Columns("cAddress")
            Me.columncCompany = Me.Columns("cCompany")
            Me.columndCust_EntryDate = Me.Columns("dCust_EntryDate")
            Me.columndLstOrdrDate = Me.Columns("dLstOrdrDate")
            Me.columncCust_BillAdd = Me.Columns("cCust_BillAdd")
            Me.columncEmail = Me.Columns("cEmail")
            Me.columncURL = Me.Columns("cURL")
            Me.columncCust_Fax = Me.Columns("cCust_Fax")
            Me.columncCust_Mobile = Me.Columns("cCust_Mobile")
            Me.columncComment = Me.Columns("cComment")
            Me.columncDriverDirection = Me.Columns("cDriverDirection")
            Me.columncReview = Me.Columns("cReview")
            Me.columncCardHolder = Me.Columns("cCardHolder")
            Me.columncCardNo = Me.Columns("cCardNo")
            Me.columnnIssueNo = Me.Columns("nIssueNo")
            Me.columndValidfrom = Me.Columns("dValidfrom")
            Me.columndExpiryDate = Me.Columns("dExpiryDate")
            Me.columncUserId = Me.Columns("cUserId")
            Me.columncTermenal = Me.Columns("cTermenal")
            Me.columndAccessTime = Me.Columns("dAccessTime")
            Me.columnnGuestsNumber = Me.Columns("nGuestsNumber")
            Me.columnnTable_Id = Me.Columns("nTable_Id")
            Me.columnnCtgry_Id = Me.Columns("nCtgry_Id")
            Me.columncCtgry_Name = Me.Columns("cCtgry_Name")
            Me.columncCtgry_SC = Me.Columns("cCtgry_SC")
            Me.columnnInstruction_Id = Me.Columns("nInstruction_Id")
            Me.columncInstruction = Me.Columns("cInstruction")
            Me.columnnItem_Id = Me.Columns("nItem_Id")
            Me.columncItem_Name = Me.Columns("cItem_Name")
            Me.columncItem_SC = Me.Columns("cItem_SC")
            Me.columncItem_Desc = Me.Columns("cItem_Desc")
            Me.columncItem_ServeLoc = Me.Columns("cItem_ServeLoc")
            Me.columnnItem_Stock = Me.Columns("nItem_Stock")
            Me.columnmDinePrice = Me.Columns("mDinePrice")
            Me.columnmTakeawayPrice = Me.Columns("mTakeawayPrice")
            Me.columnnOrder_Id = Me.Columns("nOrder_Id")
            Me.columndOrder_date = Me.Columns("dOrder_date")
            Me.columnmTotalPrice = Me.Columns("mTotalPrice")
            Me.columnmDiscount = Me.Columns("mDiscount")
            Me.columnmService_Charge = Me.Columns("mService_Charge")
            Me.columnmNetpay = Me.Columns("mNetpay")
            Me.columnnOrderStatus = Me.Columns("nOrderStatus")
            Me.columnnItem_Qty = Me.Columns("nItem_Qty")
            Me.columnnTable_Size = Me.Columns("nTable_Size")
            Me.columnnTable_Capacity = Me.Columns("nTable_Capacity")
            Me.columnnStatus = Me.Columns("nStatus")
            Me.columnnType_Id = Me.Columns("nType_Id")
            Me.columncType_Name = Me.Columns("cType_Name")
            Me.columncType_SC = Me.Columns("cType_SC")
            Me.columnmUnitPrice = Me.Columns("mUnitPrice")
            Me.columnnCardId = Me.Columns("nCardId")
            Me.columncCardType = Me.Columns("cCardType")
            Me.columncRestName = Me.Columns("cRestName")
            Me.columncRestType = Me.Columns("cRestType")
            Me.columncResAddress1 = Me.Columns("cResAddress1")
            Me.columncResAddress2 = Me.Columns("cResAddress2")
            Me.columncResAddress3 = Me.Columns("cResAddress3")
            Me.columncResPhoneNumber = Me.Columns("cResPhoneNumber")
            Me.columncResFaxNumber = Me.Columns("cResFaxNumber")
            Me.columncResEmaiAddress = Me.Columns("cResEmaiAddress")
            Me.columncResWebAddress = Me.Columns("cResWebAddress")
            Me.columncGreetinMsg = Me.Columns("cGreetinMsg")
            Me.columnnVat = Me.Columns("nVat")
            Me.columncVatNumber = Me.Columns("cVatNumber")
            Me.columnmCashPayAmount = Me.Columns("mCashPayAmount")
            Me.columnmCardPayAmount = Me.Columns("mCardPayAmount")
            Me.columnmChequeAmount = Me.Columns("mChequeAmount")
            Me.columncChequeNumber = Me.Columns("cChequeNumber")
            Me.columncBankName = Me.Columns("cBankName")
            Me.columnmTotalFoodSales = Me.Columns("mTotalFoodSales")
            Me.columnmTotalDrinkSales = Me.Columns("mTotalDrinkSales")
        End Sub
        
        Private Sub InitClass()
            Me.columnnCust_Id = New DataColumn("nCust_Id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnCust_Id)
            Me.columncCust_Name = New DataColumn("cCust_Name", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncCust_Name)
            Me.columncPhnNo = New DataColumn("cPhnNo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncPhnNo)
            Me.columncPostCode = New DataColumn("cPostCode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncPostCode)
            Me.columncAddress = New DataColumn("cAddress", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncAddress)
            Me.columncCompany = New DataColumn("cCompany", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncCompany)
            Me.columndCust_EntryDate = New DataColumn("dCust_EntryDate", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndCust_EntryDate)
            Me.columndLstOrdrDate = New DataColumn("dLstOrdrDate", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndLstOrdrDate)
            Me.columncCust_BillAdd = New DataColumn("cCust_BillAdd", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncCust_BillAdd)
            Me.columncEmail = New DataColumn("cEmail", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncEmail)
            Me.columncURL = New DataColumn("cURL", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncURL)
            Me.columncCust_Fax = New DataColumn("cCust_Fax", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncCust_Fax)
            Me.columncCust_Mobile = New DataColumn("cCust_Mobile", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncCust_Mobile)
            Me.columncComment = New DataColumn("cComment", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncComment)
            Me.columncDriverDirection = New DataColumn("cDriverDirection", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncDriverDirection)
            Me.columncReview = New DataColumn("cReview", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncReview)
            Me.columncCardHolder = New DataColumn("cCardHolder", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncCardHolder)
            Me.columncCardNo = New DataColumn("cCardNo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncCardNo)
            Me.columnnIssueNo = New DataColumn("nIssueNo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnIssueNo)
            Me.columndValidfrom = New DataColumn("dValidfrom", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndValidfrom)
            Me.columndExpiryDate = New DataColumn("dExpiryDate", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndExpiryDate)
            Me.columncUserId = New DataColumn("cUserId", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncUserId)
            Me.columncTermenal = New DataColumn("cTermenal", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncTermenal)
            Me.columndAccessTime = New DataColumn("dAccessTime", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndAccessTime)
            Me.columnnGuestsNumber = New DataColumn("nGuestsNumber", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnGuestsNumber)
            Me.columnnTable_Id = New DataColumn("nTable_Id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnTable_Id)
            Me.columnnCtgry_Id = New DataColumn("nCtgry_Id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnCtgry_Id)
            Me.columncCtgry_Name = New DataColumn("cCtgry_Name", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncCtgry_Name)
            Me.columncCtgry_SC = New DataColumn("cCtgry_SC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncCtgry_SC)
            Me.columnnInstruction_Id = New DataColumn("nInstruction_Id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnInstruction_Id)
            Me.columncInstruction = New DataColumn("cInstruction", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncInstruction)
            Me.columnnItem_Id = New DataColumn("nItem_Id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnItem_Id)
            Me.columncItem_Name = New DataColumn("cItem_Name", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncItem_Name)
            Me.columncItem_SC = New DataColumn("cItem_SC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncItem_SC)
            Me.columncItem_Desc = New DataColumn("cItem_Desc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncItem_Desc)
            Me.columncItem_ServeLoc = New DataColumn("cItem_ServeLoc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncItem_ServeLoc)
            Me.columnnItem_Stock = New DataColumn("nItem_Stock", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnItem_Stock)
            Me.columnmDinePrice = New DataColumn("mDinePrice", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmDinePrice)
            Me.columnmTakeawayPrice = New DataColumn("mTakeawayPrice", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmTakeawayPrice)
            Me.columnnOrder_Id = New DataColumn("nOrder_Id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnOrder_Id)
            Me.columndOrder_date = New DataColumn("dOrder_date", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndOrder_date)
            Me.columnmTotalPrice = New DataColumn("mTotalPrice", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmTotalPrice)
            Me.columnmDiscount = New DataColumn("mDiscount", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmDiscount)
            Me.columnmService_Charge = New DataColumn("mService_Charge", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmService_Charge)
            Me.columnmNetpay = New DataColumn("mNetpay", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmNetpay)
            Me.columnnOrderStatus = New DataColumn("nOrderStatus", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnOrderStatus)
            Me.columnnItem_Qty = New DataColumn("nItem_Qty", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnItem_Qty)
            Me.columnnTable_Size = New DataColumn("nTable_Size", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnTable_Size)
            Me.columnnTable_Capacity = New DataColumn("nTable_Capacity", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnTable_Capacity)
            Me.columnnStatus = New DataColumn("nStatus", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnStatus)
            Me.columnnType_Id = New DataColumn("nType_Id", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnType_Id)
            Me.columncType_Name = New DataColumn("cType_Name", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncType_Name)
            Me.columncType_SC = New DataColumn("cType_SC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncType_SC)
            Me.columnmUnitPrice = New DataColumn("mUnitPrice", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmUnitPrice)
            Me.columnnCardId = New DataColumn("nCardId", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnCardId)
            Me.columncCardType = New DataColumn("cCardType", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncCardType)
            Me.columncRestName = New DataColumn("cRestName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncRestName)
            Me.columncRestType = New DataColumn("cRestType", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncRestType)
            Me.columncResAddress1 = New DataColumn("cResAddress1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncResAddress1)
            Me.columncResAddress2 = New DataColumn("cResAddress2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncResAddress2)
            Me.columncResAddress3 = New DataColumn("cResAddress3", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncResAddress3)
            Me.columncResPhoneNumber = New DataColumn("cResPhoneNumber", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncResPhoneNumber)
            Me.columncResFaxNumber = New DataColumn("cResFaxNumber", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncResFaxNumber)
            Me.columncResEmaiAddress = New DataColumn("cResEmaiAddress", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncResEmaiAddress)
            Me.columncResWebAddress = New DataColumn("cResWebAddress", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncResWebAddress)
            Me.columncGreetinMsg = New DataColumn("cGreetinMsg", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncGreetinMsg)
            Me.columnnVat = New DataColumn("nVat", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnVat)
            Me.columncVatNumber = New DataColumn("cVatNumber", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncVatNumber)
            Me.columnmCashPayAmount = New DataColumn("mCashPayAmount", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmCashPayAmount)
            Me.columnmCardPayAmount = New DataColumn("mCardPayAmount", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmCardPayAmount)
            Me.columnmChequeAmount = New DataColumn("mChequeAmount", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmChequeAmount)
            Me.columncChequeNumber = New DataColumn("cChequeNumber", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncChequeNumber)
            Me.columncBankName = New DataColumn("cBankName", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncBankName)
            Me.columnmTotalFoodSales = New DataColumn("mTotalFoodSales", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmTotalFoodSales)
            Me.columnmTotalDrinkSales = New DataColumn("mTotalDrinkSales", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmTotalDrinkSales)
        End Sub
        
        Public Function NewtCust_InfoRow() As tCust_InfoRow
            Return CType(Me.NewRow,tCust_InfoRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tCust_InfoRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tCust_InfoRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tCust_InfoRowChangedEvent) Is Nothing) Then
                RaiseEvent tCust_InfoRowChanged(Me, New tCust_InfoRowChangeEvent(CType(e.Row,tCust_InfoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tCust_InfoRowChangingEvent) Is Nothing) Then
                RaiseEvent tCust_InfoRowChanging(Me, New tCust_InfoRowChangeEvent(CType(e.Row,tCust_InfoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tCust_InfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent tCust_InfoRowDeleted(Me, New tCust_InfoRowChangeEvent(CType(e.Row,tCust_InfoRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tCust_InfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent tCust_InfoRowDeleting(Me, New tCust_InfoRowChangeEvent(CType(e.Row,tCust_InfoRow), e.Action))
            End If
        End Sub
        
        Public Sub RemovetCust_InfoRow(ByVal row As tCust_InfoRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tCust_InfoRow
        Inherits DataRow
        
        Private tabletCust_Info As tCust_InfoDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletCust_Info = CType(Me.Table,tCust_InfoDataTable)
        End Sub
        
        Public Property nCust_Id As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.nCust_IdColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.nCust_IdColumn) = value
            End Set
        End Property
        
        Public Property cCust_Name As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cCust_NameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cCust_NameColumn) = value
            End Set
        End Property
        
        Public Property cPhnNo As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cPhnNoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cPhnNoColumn) = value
            End Set
        End Property
        
        Public Property cPostCode As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cPostCodeColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cPostCodeColumn) = value
            End Set
        End Property
        
        Public Property cAddress As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cAddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cAddressColumn) = value
            End Set
        End Property
        
        Public Property cCompany As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cCompanyColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cCompanyColumn) = value
            End Set
        End Property
        
        Public Property dCust_EntryDate As Date
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.dCust_EntryDateColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.dCust_EntryDateColumn) = value
            End Set
        End Property
        
        Public Property dLstOrdrDate As Date
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.dLstOrdrDateColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.dLstOrdrDateColumn) = value
            End Set
        End Property
        
        Public Property cCust_BillAdd As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cCust_BillAddColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cCust_BillAddColumn) = value
            End Set
        End Property
        
        Public Property cEmail As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cEmailColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cEmailColumn) = value
            End Set
        End Property
        
        Public Property cURL As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cURLColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cURLColumn) = value
            End Set
        End Property
        
        Public Property cCust_Fax As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cCust_FaxColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cCust_FaxColumn) = value
            End Set
        End Property
        
        Public Property cCust_Mobile As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cCust_MobileColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cCust_MobileColumn) = value
            End Set
        End Property
        
        Public Property cComment As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cCommentColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cCommentColumn) = value
            End Set
        End Property
        
        Public Property cDriverDirection As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cDriverDirectionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cDriverDirectionColumn) = value
            End Set
        End Property
        
        Public Property cReview As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cReviewColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cReviewColumn) = value
            End Set
        End Property
        
        Public Property cCardHolder As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cCardHolderColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cCardHolderColumn) = value
            End Set
        End Property
        
        Public Property cCardNo As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cCardNoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cCardNoColumn) = value
            End Set
        End Property
        
        Public Property nIssueNo As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.nIssueNoColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.nIssueNoColumn) = value
            End Set
        End Property
        
        Public Property dValidfrom As Date
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.dValidfromColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.dValidfromColumn) = value
            End Set
        End Property
        
        Public Property dExpiryDate As Date
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.dExpiryDateColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.dExpiryDateColumn) = value
            End Set
        End Property
        
        Public Property cUserId As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cUserIdColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cUserIdColumn) = value
            End Set
        End Property
        
        Public Property cTermenal As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cTermenalColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cTermenalColumn) = value
            End Set
        End Property
        
        Public Property dAccessTime As Date
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.dAccessTimeColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.dAccessTimeColumn) = value
            End Set
        End Property
        
        Public Property nGuestsNumber As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.nGuestsNumberColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.nGuestsNumberColumn) = value
            End Set
        End Property
        
        Public Property nTable_Id As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.nTable_IdColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.nTable_IdColumn) = value
            End Set
        End Property
        
        Public Property nCtgry_Id As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.nCtgry_IdColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.nCtgry_IdColumn) = value
            End Set
        End Property
        
        Public Property cCtgry_Name As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cCtgry_NameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cCtgry_NameColumn) = value
            End Set
        End Property
        
        Public Property cCtgry_SC As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cCtgry_SCColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cCtgry_SCColumn) = value
            End Set
        End Property
        
        Public Property nInstruction_Id As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.nInstruction_IdColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.nInstruction_IdColumn) = value
            End Set
        End Property
        
        Public Property cInstruction As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cInstructionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cInstructionColumn) = value
            End Set
        End Property
        
        Public Property nItem_Id As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.nItem_IdColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.nItem_IdColumn) = value
            End Set
        End Property
        
        Public Property cItem_Name As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cItem_NameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cItem_NameColumn) = value
            End Set
        End Property
        
        Public Property cItem_SC As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cItem_SCColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cItem_SCColumn) = value
            End Set
        End Property
        
        Public Property cItem_Desc As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cItem_DescColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cItem_DescColumn) = value
            End Set
        End Property
        
        Public Property cItem_ServeLoc As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cItem_ServeLocColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cItem_ServeLocColumn) = value
            End Set
        End Property
        
        Public Property nItem_Stock As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.nItem_StockColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.nItem_StockColumn) = value
            End Set
        End Property
        
        Public Property mDinePrice As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.mDinePriceColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.mDinePriceColumn) = value
            End Set
        End Property
        
        Public Property mTakeawayPrice As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.mTakeawayPriceColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.mTakeawayPriceColumn) = value
            End Set
        End Property
        
        Public Property nOrder_Id As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.nOrder_IdColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.nOrder_IdColumn) = value
            End Set
        End Property
        
        Public Property dOrder_date As Date
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.dOrder_dateColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.dOrder_dateColumn) = value
            End Set
        End Property
        
        Public Property mTotalPrice As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.mTotalPriceColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.mTotalPriceColumn) = value
            End Set
        End Property
        
        Public Property mDiscount As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.mDiscountColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.mDiscountColumn) = value
            End Set
        End Property
        
        Public Property mService_Charge As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.mService_ChargeColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.mService_ChargeColumn) = value
            End Set
        End Property
        
        Public Property mNetpay As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.mNetpayColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.mNetpayColumn) = value
            End Set
        End Property
        
        Public Property nOrderStatus As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.nOrderStatusColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.nOrderStatusColumn) = value
            End Set
        End Property
        
        Public Property nItem_Qty As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.nItem_QtyColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.nItem_QtyColumn) = value
            End Set
        End Property
        
        Public Property nTable_Size As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.nTable_SizeColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.nTable_SizeColumn) = value
            End Set
        End Property
        
        Public Property nTable_Capacity As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.nTable_CapacityColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.nTable_CapacityColumn) = value
            End Set
        End Property
        
        Public Property nStatus As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.nStatusColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.nStatusColumn) = value
            End Set
        End Property
        
        Public Property nType_Id As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.nType_IdColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.nType_IdColumn) = value
            End Set
        End Property
        
        Public Property cType_Name As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cType_NameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cType_NameColumn) = value
            End Set
        End Property
        
        Public Property cType_SC As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cType_SCColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cType_SCColumn) = value
            End Set
        End Property
        
        Public Property mUnitPrice As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.mUnitPriceColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.mUnitPriceColumn) = value
            End Set
        End Property
        
        Public Property nCardId As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.nCardIdColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.nCardIdColumn) = value
            End Set
        End Property
        
        Public Property cCardType As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cCardTypeColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cCardTypeColumn) = value
            End Set
        End Property
        
        Public Property cRestName As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cRestNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cRestNameColumn) = value
            End Set
        End Property
        
        Public Property cRestType As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cRestTypeColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cRestTypeColumn) = value
            End Set
        End Property
        
        Public Property cResAddress1 As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cResAddress1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cResAddress1Column) = value
            End Set
        End Property
        
        Public Property cResAddress2 As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cResAddress2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cResAddress2Column) = value
            End Set
        End Property
        
        Public Property cResAddress3 As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cResAddress3Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cResAddress3Column) = value
            End Set
        End Property
        
        Public Property cResPhoneNumber As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cResPhoneNumberColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cResPhoneNumberColumn) = value
            End Set
        End Property
        
        Public Property cResFaxNumber As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cResFaxNumberColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cResFaxNumberColumn) = value
            End Set
        End Property
        
        Public Property cResEmaiAddress As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cResEmaiAddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cResEmaiAddressColumn) = value
            End Set
        End Property
        
        Public Property cResWebAddress As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cResWebAddressColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cResWebAddressColumn) = value
            End Set
        End Property
        
        Public Property cGreetinMsg As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cGreetinMsgColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cGreetinMsgColumn) = value
            End Set
        End Property
        
        Public Property nVat As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.nVatColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.nVatColumn) = value
            End Set
        End Property
        
        Public Property cVatNumber As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cVatNumberColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cVatNumberColumn) = value
            End Set
        End Property
        
        Public Property mCashPayAmount As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.mCashPayAmountColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.mCashPayAmountColumn) = value
            End Set
        End Property
        
        Public Property mCardPayAmount As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.mCardPayAmountColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.mCardPayAmountColumn) = value
            End Set
        End Property
        
        Public Property mChequeAmount As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.mChequeAmountColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.mChequeAmountColumn) = value
            End Set
        End Property
        
        Public Property cChequeNumber As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cChequeNumberColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cChequeNumberColumn) = value
            End Set
        End Property
        
        Public Property cBankName As String
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.cBankNameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.cBankNameColumn) = value
            End Set
        End Property
        
        Public Property mTotalFoodSales As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.mTotalFoodSalesColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.mTotalFoodSalesColumn) = value
            End Set
        End Property
        
        Public Property mTotalDrinkSales As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletCust_Info.mTotalDrinkSalesColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletCust_Info.mTotalDrinkSalesColumn) = value
            End Set
        End Property
        
        Public Function IsnCust_IdNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.nCust_IdColumn)
        End Function
        
        Public Sub SetnCust_IdNull()
            Me(Me.tabletCust_Info.nCust_IdColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscCust_NameNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cCust_NameColumn)
        End Function
        
        Public Sub SetcCust_NameNull()
            Me(Me.tabletCust_Info.cCust_NameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscPhnNoNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cPhnNoColumn)
        End Function
        
        Public Sub SetcPhnNoNull()
            Me(Me.tabletCust_Info.cPhnNoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscPostCodeNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cPostCodeColumn)
        End Function
        
        Public Sub SetcPostCodeNull()
            Me(Me.tabletCust_Info.cPostCodeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscAddressNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cAddressColumn)
        End Function
        
        Public Sub SetcAddressNull()
            Me(Me.tabletCust_Info.cAddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscCompanyNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cCompanyColumn)
        End Function
        
        Public Sub SetcCompanyNull()
            Me(Me.tabletCust_Info.cCompanyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsdCust_EntryDateNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.dCust_EntryDateColumn)
        End Function
        
        Public Sub SetdCust_EntryDateNull()
            Me(Me.tabletCust_Info.dCust_EntryDateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsdLstOrdrDateNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.dLstOrdrDateColumn)
        End Function
        
        Public Sub SetdLstOrdrDateNull()
            Me(Me.tabletCust_Info.dLstOrdrDateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscCust_BillAddNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cCust_BillAddColumn)
        End Function
        
        Public Sub SetcCust_BillAddNull()
            Me(Me.tabletCust_Info.cCust_BillAddColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscEmailNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cEmailColumn)
        End Function
        
        Public Sub SetcEmailNull()
            Me(Me.tabletCust_Info.cEmailColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscURLNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cURLColumn)
        End Function
        
        Public Sub SetcURLNull()
            Me(Me.tabletCust_Info.cURLColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscCust_FaxNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cCust_FaxColumn)
        End Function
        
        Public Sub SetcCust_FaxNull()
            Me(Me.tabletCust_Info.cCust_FaxColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscCust_MobileNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cCust_MobileColumn)
        End Function
        
        Public Sub SetcCust_MobileNull()
            Me(Me.tabletCust_Info.cCust_MobileColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscCommentNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cCommentColumn)
        End Function
        
        Public Sub SetcCommentNull()
            Me(Me.tabletCust_Info.cCommentColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscDriverDirectionNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cDriverDirectionColumn)
        End Function
        
        Public Sub SetcDriverDirectionNull()
            Me(Me.tabletCust_Info.cDriverDirectionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscReviewNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cReviewColumn)
        End Function
        
        Public Sub SetcReviewNull()
            Me(Me.tabletCust_Info.cReviewColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscCardHolderNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cCardHolderColumn)
        End Function
        
        Public Sub SetcCardHolderNull()
            Me(Me.tabletCust_Info.cCardHolderColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscCardNoNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cCardNoColumn)
        End Function
        
        Public Sub SetcCardNoNull()
            Me(Me.tabletCust_Info.cCardNoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsnIssueNoNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.nIssueNoColumn)
        End Function
        
        Public Sub SetnIssueNoNull()
            Me(Me.tabletCust_Info.nIssueNoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsdValidfromNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.dValidfromColumn)
        End Function
        
        Public Sub SetdValidfromNull()
            Me(Me.tabletCust_Info.dValidfromColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsdExpiryDateNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.dExpiryDateColumn)
        End Function
        
        Public Sub SetdExpiryDateNull()
            Me(Me.tabletCust_Info.dExpiryDateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscUserIdNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cUserIdColumn)
        End Function
        
        Public Sub SetcUserIdNull()
            Me(Me.tabletCust_Info.cUserIdColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscTermenalNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cTermenalColumn)
        End Function
        
        Public Sub SetcTermenalNull()
            Me(Me.tabletCust_Info.cTermenalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsdAccessTimeNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.dAccessTimeColumn)
        End Function
        
        Public Sub SetdAccessTimeNull()
            Me(Me.tabletCust_Info.dAccessTimeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsnGuestsNumberNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.nGuestsNumberColumn)
        End Function
        
        Public Sub SetnGuestsNumberNull()
            Me(Me.tabletCust_Info.nGuestsNumberColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsnTable_IdNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.nTable_IdColumn)
        End Function
        
        Public Sub SetnTable_IdNull()
            Me(Me.tabletCust_Info.nTable_IdColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsnCtgry_IdNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.nCtgry_IdColumn)
        End Function
        
        Public Sub SetnCtgry_IdNull()
            Me(Me.tabletCust_Info.nCtgry_IdColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscCtgry_NameNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cCtgry_NameColumn)
        End Function
        
        Public Sub SetcCtgry_NameNull()
            Me(Me.tabletCust_Info.cCtgry_NameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscCtgry_SCNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cCtgry_SCColumn)
        End Function
        
        Public Sub SetcCtgry_SCNull()
            Me(Me.tabletCust_Info.cCtgry_SCColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsnInstruction_IdNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.nInstruction_IdColumn)
        End Function
        
        Public Sub SetnInstruction_IdNull()
            Me(Me.tabletCust_Info.nInstruction_IdColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscInstructionNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cInstructionColumn)
        End Function
        
        Public Sub SetcInstructionNull()
            Me(Me.tabletCust_Info.cInstructionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsnItem_IdNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.nItem_IdColumn)
        End Function
        
        Public Sub SetnItem_IdNull()
            Me(Me.tabletCust_Info.nItem_IdColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscItem_NameNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cItem_NameColumn)
        End Function
        
        Public Sub SetcItem_NameNull()
            Me(Me.tabletCust_Info.cItem_NameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscItem_SCNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cItem_SCColumn)
        End Function
        
        Public Sub SetcItem_SCNull()
            Me(Me.tabletCust_Info.cItem_SCColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscItem_DescNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cItem_DescColumn)
        End Function
        
        Public Sub SetcItem_DescNull()
            Me(Me.tabletCust_Info.cItem_DescColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscItem_ServeLocNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cItem_ServeLocColumn)
        End Function
        
        Public Sub SetcItem_ServeLocNull()
            Me(Me.tabletCust_Info.cItem_ServeLocColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsnItem_StockNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.nItem_StockColumn)
        End Function
        
        Public Sub SetnItem_StockNull()
            Me(Me.tabletCust_Info.nItem_StockColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsmDinePriceNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.mDinePriceColumn)
        End Function
        
        Public Sub SetmDinePriceNull()
            Me(Me.tabletCust_Info.mDinePriceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsmTakeawayPriceNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.mTakeawayPriceColumn)
        End Function
        
        Public Sub SetmTakeawayPriceNull()
            Me(Me.tabletCust_Info.mTakeawayPriceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsnOrder_IdNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.nOrder_IdColumn)
        End Function
        
        Public Sub SetnOrder_IdNull()
            Me(Me.tabletCust_Info.nOrder_IdColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsdOrder_dateNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.dOrder_dateColumn)
        End Function
        
        Public Sub SetdOrder_dateNull()
            Me(Me.tabletCust_Info.dOrder_dateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsmTotalPriceNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.mTotalPriceColumn)
        End Function
        
        Public Sub SetmTotalPriceNull()
            Me(Me.tabletCust_Info.mTotalPriceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsmDiscountNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.mDiscountColumn)
        End Function
        
        Public Sub SetmDiscountNull()
            Me(Me.tabletCust_Info.mDiscountColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsmService_ChargeNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.mService_ChargeColumn)
        End Function
        
        Public Sub SetmService_ChargeNull()
            Me(Me.tabletCust_Info.mService_ChargeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsmNetpayNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.mNetpayColumn)
        End Function
        
        Public Sub SetmNetpayNull()
            Me(Me.tabletCust_Info.mNetpayColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsnOrderStatusNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.nOrderStatusColumn)
        End Function
        
        Public Sub SetnOrderStatusNull()
            Me(Me.tabletCust_Info.nOrderStatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsnItem_QtyNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.nItem_QtyColumn)
        End Function
        
        Public Sub SetnItem_QtyNull()
            Me(Me.tabletCust_Info.nItem_QtyColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsnTable_SizeNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.nTable_SizeColumn)
        End Function
        
        Public Sub SetnTable_SizeNull()
            Me(Me.tabletCust_Info.nTable_SizeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsnTable_CapacityNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.nTable_CapacityColumn)
        End Function
        
        Public Sub SetnTable_CapacityNull()
            Me(Me.tabletCust_Info.nTable_CapacityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsnStatusNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.nStatusColumn)
        End Function
        
        Public Sub SetnStatusNull()
            Me(Me.tabletCust_Info.nStatusColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsnType_IdNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.nType_IdColumn)
        End Function
        
        Public Sub SetnType_IdNull()
            Me(Me.tabletCust_Info.nType_IdColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscType_NameNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cType_NameColumn)
        End Function
        
        Public Sub SetcType_NameNull()
            Me(Me.tabletCust_Info.cType_NameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscType_SCNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cType_SCColumn)
        End Function
        
        Public Sub SetcType_SCNull()
            Me(Me.tabletCust_Info.cType_SCColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsmUnitPriceNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.mUnitPriceColumn)
        End Function
        
        Public Sub SetmUnitPriceNull()
            Me(Me.tabletCust_Info.mUnitPriceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsnCardIdNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.nCardIdColumn)
        End Function
        
        Public Sub SetnCardIdNull()
            Me(Me.tabletCust_Info.nCardIdColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscCardTypeNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cCardTypeColumn)
        End Function
        
        Public Sub SetcCardTypeNull()
            Me(Me.tabletCust_Info.cCardTypeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscRestNameNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cRestNameColumn)
        End Function
        
        Public Sub SetcRestNameNull()
            Me(Me.tabletCust_Info.cRestNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscRestTypeNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cRestTypeColumn)
        End Function
        
        Public Sub SetcRestTypeNull()
            Me(Me.tabletCust_Info.cRestTypeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscResAddress1Null() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cResAddress1Column)
        End Function
        
        Public Sub SetcResAddress1Null()
            Me(Me.tabletCust_Info.cResAddress1Column) = System.Convert.DBNull
        End Sub
        
        Public Function IscResAddress2Null() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cResAddress2Column)
        End Function
        
        Public Sub SetcResAddress2Null()
            Me(Me.tabletCust_Info.cResAddress2Column) = System.Convert.DBNull
        End Sub
        
        Public Function IscResAddress3Null() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cResAddress3Column)
        End Function
        
        Public Sub SetcResAddress3Null()
            Me(Me.tabletCust_Info.cResAddress3Column) = System.Convert.DBNull
        End Sub
        
        Public Function IscResPhoneNumberNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cResPhoneNumberColumn)
        End Function
        
        Public Sub SetcResPhoneNumberNull()
            Me(Me.tabletCust_Info.cResPhoneNumberColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscResFaxNumberNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cResFaxNumberColumn)
        End Function
        
        Public Sub SetcResFaxNumberNull()
            Me(Me.tabletCust_Info.cResFaxNumberColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscResEmaiAddressNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cResEmaiAddressColumn)
        End Function
        
        Public Sub SetcResEmaiAddressNull()
            Me(Me.tabletCust_Info.cResEmaiAddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscResWebAddressNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cResWebAddressColumn)
        End Function
        
        Public Sub SetcResWebAddressNull()
            Me(Me.tabletCust_Info.cResWebAddressColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscGreetinMsgNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cGreetinMsgColumn)
        End Function
        
        Public Sub SetcGreetinMsgNull()
            Me(Me.tabletCust_Info.cGreetinMsgColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsnVatNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.nVatColumn)
        End Function
        
        Public Sub SetnVatNull()
            Me(Me.tabletCust_Info.nVatColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscVatNumberNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cVatNumberColumn)
        End Function
        
        Public Sub SetcVatNumberNull()
            Me(Me.tabletCust_Info.cVatNumberColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsmCashPayAmountNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.mCashPayAmountColumn)
        End Function
        
        Public Sub SetmCashPayAmountNull()
            Me(Me.tabletCust_Info.mCashPayAmountColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsmCardPayAmountNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.mCardPayAmountColumn)
        End Function
        
        Public Sub SetmCardPayAmountNull()
            Me(Me.tabletCust_Info.mCardPayAmountColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsmChequeAmountNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.mChequeAmountColumn)
        End Function
        
        Public Sub SetmChequeAmountNull()
            Me(Me.tabletCust_Info.mChequeAmountColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscChequeNumberNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cChequeNumberColumn)
        End Function
        
        Public Sub SetcChequeNumberNull()
            Me(Me.tabletCust_Info.cChequeNumberColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscBankNameNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.cBankNameColumn)
        End Function
        
        Public Sub SetcBankNameNull()
            Me(Me.tabletCust_Info.cBankNameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsmTotalFoodSalesNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.mTotalFoodSalesColumn)
        End Function
        
        Public Sub SetmTotalFoodSalesNull()
            Me(Me.tabletCust_Info.mTotalFoodSalesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsmTotalDrinkSalesNull() As Boolean
            Return Me.IsNull(Me.tabletCust_Info.mTotalDrinkSalesColumn)
        End Function
        
        Public Sub SetmTotalDrinkSalesNull()
            Me(Me.tabletCust_Info.mTotalDrinkSalesColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tCust_InfoRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tCust_InfoRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tCust_InfoRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tCust_InfoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
